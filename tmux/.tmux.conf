# -- plugin manager -------------------------------------------------------------------
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-capture-pane-contents 'on'

# -- general -------------------------------------------------------------------

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0
# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs
# focus events enabled for terminals that support them
set -g focus-events on
# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on
set -g default-terminal "screen-256color" # colors!
set-option -ga terminal-overrides ",*256col*:Tc"

setw -g xterm-keys on
set -sg repeat-time 300                   # increase repeat timeout
set -g mouse off
set -g mode-keys vi

unbind C-b
set -g prefix C-q
bind q send-prefix

setw -q -g utf8 on

set -g history-limit 50000                 # boost history

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'


# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 5     # redraw status line every 10 seconds
set -g status-justify centre
set-option -g automatic-rename-format '#{b:pane_current_path}'

# clear both screen and history
bind l send-keys C-l \; run 'sleep 0.1' \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity off

# modes
setw -g clock-mode-colour colour5
setw -g mode-style 'fg=colour1 bg=colour18 bold'

# panes
set -g pane-border-style 'fg=colour244 bg=colour235'
set -g pane-active-border-style 'fg=colour77 bg=colour235'
set -g pane-border-format ' [#P] <#{pane_current_command}> @ #{pane_current_path} #{?window_zoomed_flag,#[fg=colour228]Z#[fg=colour77] ,}'
set -g pane-border-status 'top'

# statusbar
set -g status-style 'bg=#000000 fg=colour250'
set -g status-left '#[fg=#EA7500,bg=colour234,bold] ï˜š #S ' # sesion name
set -g status-right '#[fg=colour250,bg=colour234,bold] %d/%m | #[fg=#EA7500 ,bg=colour234,bold]%H:%M ' # date/clock
set -g status-right-length 50
set -g status-left-length 50

setw -g window-status-current-style 'fg=#EA7500 bg=#00cac2 bold'
setw -g window-status-current-format ' #I#[fg=#000000]:#[fg=#000000]#W#[fg=#000000]#F '

setw -g window-status-style 'fg=#EA7500 bg=colour236'
setw -g window-status-format ' #I#[fg=colour250]:#[fg=colour250]#W#[fg=colour244]#F '
setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'
setw -g window-status-activity-style 'fg=#ed0000 bg=colour236 bold'
setw -g window-status-separator ''

# messages
set -g message-style 'fg=colour237 bg=colour3 bold'

# -- navigation ----------------------------------------------------------------

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# split current window horizontally
bind j split-window -v -c '#{pane_current_path}'
bind k split-window -vb -c '#{pane_current_path}'
# split current window vertically
bind l split-window -h -c '#{pane_current_path}'
bind h split-window -hb -c '#{pane_current_path}'

# create new window
bind -n C-g new-window -c '#{pane_current_path}'

# pane navigation
bind -n H select-pane -L  # move left
bind -n J select-pane -D  # move down
bind -n K select-pane -U  # move up
bind -n L select-pane -R  # move right
bind -n C-s select-pane -l
bind s swap-pane -D       # swap current pane with the next one
bind = next-layout
bind - previous-layout

# pane resizing
bind -n C-Left resize-pane -L 5
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5
bind -n C-Right resize-pane -R 5

# window navigation
unbind n
unbind p
bind -n C-h previous-window # select previous window
bind -n C-l next-window     # select next window
bind -n C-w last-window     # move to last active window

# -- copy mode -----------------------------------------------------------------

bind -n M-v copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'


# -- buffers -------------------------------------------------------------------

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from

# -- end run tpm -------------------------------------------------------------------
run '~/.tmux/plugins/tpm/tpm'

